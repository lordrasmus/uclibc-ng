name: z_qemu_test_run

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
     checks: write
     pull-requests: write
  
    steps:
    
      - name: Install qemu / python3 junit_xml
        run: sudo apt-get -y update; sudo apt-get install -y qemu-system python3-junit.xml
        
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
          
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: Qemu_Images
       # Use the output from the reusable workflow to upload the artifacts
      - name: Infos
        run: |
           jq '.' infos.json
      
      - name: parse Config JSON
        id: parse-json
        run: |
          json=$(cat infos.json)
          for key in $(echo "$json" | jq -r 'keys[]'); do
            value=$(echo "$json" | jq -r ".$key")
            echo "$key=$value" >> "$GITHUB_ENV"
          done
          
      - name: run Qemu
        run: |
           python3 .github/tools/run_qemu.py
           python3 .github/tools/read_test_log.py
    
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.7.0
        id: test-results-${{ github.workflow }}
        if: always()
        with:
          files: "test_result.xml"
          
      - name: Set badge color
        shell: bash
        run: |
            case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
                success)
                    echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
                    ;;
                failure)
                    echo "BADGE_COLOR=800000" >> $GITHUB_ENV
                    ;;
                neutral)
                    echo "BADGE_COLOR=696969" >> $GITHUB_ENV
                    ;;
            esac

      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: badge.svg

      - name: upload 
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: Test_Result
          path: |
             log.txt
             badge.svg
